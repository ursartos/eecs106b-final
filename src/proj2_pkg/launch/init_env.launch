<launch>
    <arg name="sim" default="true"/>
    <arg name="start_position" default="1 1 0" />
    <arg name="map" default="empty.yaml" />

    <group if="$(eval map == 'empty.yaml')">
        <rosparam>
            environment/terrains: []
            environment/obstacles: []
            environment/low_lims: [0, 0]
            environment/high_lims: [5, 5]
        </rosparam>
    </group>

    <group if="$(eval map == 'map1.yaml')">
        <rosparam>
            environment/obstacles: [[6, 3.5, 1.5], [3.5, 6.5, 1]]
            environment/low_lims: [0, 0]
            environment/high_lims: [10, 10]
        </rosparam>
    </group>

    <group if="$(eval map == 'map2.yaml')">
        <rosparam>
            environment/obstacles: [[2, 5, 1], [5, 5, 1], [8, 5, 1], [8, 2, 1], [2, 8, 1]]
            environment/low_lims: [0, 0]
            environment/high_lims: [10, 10]
        </rosparam>
    </group>

    <group if="$(eval map == 'terrains.yaml')">
        <rosparam>
            environment/terrains: [[[4, 8, 4, 8], 0.1, 0.1]]
            environment/obstacles: []
            <!-- [[2, 5, 1], [5, 5, 1], [8, 5, 1], [8, 2, 1], [2, 8, 1]] -->
            environment/low_lims: [0, 0]
            environment/high_lims: [10, 10]
        </rosparam>
    </group>
    
    <group if="$(eval map == 'terrain_noavoid.yaml')">
        <rosparam>
            environment/terrains: [[[3, 6, 0, 4], 0.1, 0.1]]
            environment/obstacles: []
            <!-- [[2, 5, 1], [5, 5, 1], [8, 5, 1], [8, 2, 1], [2, 8, 1]] -->
            environment/low_lims: [0, 0]
            environment/high_lims: [10, 4]
        </rosparam>
    </group>

    <group if="$(eval map == 'terrains_random.yaml')">
        <rosparam>
            environment/terrains: [[[0, 1, 0, 1], 0.1165648461276736, 1], [[0, 1, 1, 2], 1.2391978811221063, 1], [[0, 1, 2, 3], 1.877278482886263, 1], [[0, 1, 3, 4], 1.9439189602510407, 1], [[0, 1, 4, 5], 1.0483343185099203, 1], [[0, 1, 5, 6], 1.9947710706201214, 1], [[0, 1, 6, 7], 0.7463911043638198, 1], [[0, 1, 7, 8], 0.23263832929134298, 1], [[0, 1, 8, 9], 1.4030143268131716, 1], [[0, 1, 9, 10], 0.8501293431261139, 1], [[1, 2, 0, 1], 0.357418038722483, 1], [[1, 2, 1, 2], 1.1262713112974014, 1], [[1, 2, 2, 3], 1.0224740481201817, 1], [[1, 2, 3, 4], 1.1607470720285258, 1], [[1, 2, 4, 5], 0.628558236936452, 1], [[1, 2, 5, 6], 0.11812763246065994, 1], [[1, 2, 6, 7], 1.0977567390100993, 1], [[1, 2, 7, 8], 0.21295975332979733, 1], [[1, 2, 8, 9], 1.895469559306772, 1], [[1, 2, 9, 10], 1.1457899922929515, 1], [[2, 3, 0, 1], 0.40640678578702616, 1], [[2, 3, 1, 2], 0.18803758558114447, 1], [[2, 3, 2, 3], 0.5622712852745324, 1], [[2, 3, 3, 4], 1.4027390025179174, 1], [[2, 3, 4, 5], 0.8035312544945248, 1], [[2, 3, 5, 6], 0.2015279194213384, 1], [[2, 3, 6, 7], 0.2428182235942462, 1], [[2, 3, 7, 8], 1.4375973677320548, 1], [[2, 3, 8, 9], 0.6505278059494115, 1], [[2, 3, 9, 10], 0.942559596538812, 1], [[3, 4, 0, 1], 0.5815993799206749, 1], [[3, 4, 1, 2], 1.755815032765839, 1], [[3, 4, 2, 3], 0.9944111898626662, 1], [[3, 4, 3, 4], 0.351993577687721, 1], [[3, 4, 4, 5], 1.7237679687179683, 1], [[3, 4, 5, 6], 0.5487401709977238, 1], [[3, 4, 6, 7], 1.2259065873856652, 1], [[3, 4, 7, 8], 1.2323936549122154, 1], [[3, 4, 8, 9], 0.9018450317020852, 1], [[3, 4, 9, 10], 1.890835700671461, 1], [[4, 5, 0, 1], 0.20024617375137832, 1], [[4, 5, 1, 2], 0.8687625332276141, 1], [[4, 5, 2, 3], 1.667786222036345, 1], [[4, 5, 3, 4], 1.4022128259893436, 1], [[4, 5, 4, 5], 1.1108967621323405, 1], [[4, 5, 5, 6], 1.0677998022370223, 1], [[4, 5, 6, 7], 0.1531500840252511, 1], [[4, 5, 7, 8], 1.8486783769431365, 1], [[4, 5, 8, 9], 1.6251541185563523, 1], [[4, 5, 9, 10], 1.5896009746555686, 1], [[5, 6, 0, 1], 1.8455391859157104, 1], [[5, 6, 1, 2], 1.9990371850308966, 1], [[5, 6, 2, 3], 0.19190938657223477, 1], [[5, 6, 3, 4], 0.6291097660192244, 1], [[5, 6, 4, 5], 0.7171277495123864, 1], [[5, 6, 5, 6], 1.382013252435728, 1], [[5, 6, 6, 7], 0.32411249662292696, 1], [[5, 6, 7, 8], 0.8136851183786624, 1], [[5, 6, 8, 9], 0.5264552610623732, 1], [[5, 6, 9, 10], 1.4059923450551854, 1], [[6, 7, 0, 1], 1.3959314564681917, 1], [[6, 7, 1, 2], 1.700923381765529, 1], [[6, 7, 2, 3], 0.6639921687984838, 1], [[6, 7, 3, 4], 1.9842460690742834, 1], [[6, 7, 4, 5], 0.6429351410807298, 1], [[6, 7, 5, 6], 0.7939831277603935, 1], [[6, 7, 6, 7], 1.450380551660959, 1], [[6, 7, 7, 8], 1.2713978681662328, 1], [[6, 7, 8, 9], 0.2387761797681751, 1], [[6, 7, 9, 10], 0.7880732165913407, 1], [[7, 8, 0, 1], 1.7222943081332471, 1], [[7, 8, 1, 2], 1.604676160805621, 1], [[7, 8, 2, 3], 0.764447446498008, 1], [[7, 8, 3, 4], 0.20967127641076844, 1], [[7, 8, 4, 5], 1.8841202203354026, 1], [[7, 8, 5, 6], 0.14439793016138247, 1], [[7, 8, 6, 7], 0.6151977720503283, 1], [[7, 8, 7, 8], 1.207034341764902, 1], [[7, 8, 8, 9], 1.7256000414250063, 1], [[7, 8, 9, 10], 0.9374731535874659, 1], [[8, 9, 0, 1], 0.30307321858549496, 1], [[8, 9, 1, 2], 1.9343081784261957, 1], [[8, 9, 2, 3], 1.5634236711997322, 1], [[8, 9, 3, 4], 1.164284486628524, 1], [[8, 9, 4, 5], 0.8071588670577592, 1], [[8, 9, 5, 6], 1.93739857491204, 1], [[8, 9, 6, 7], 0.4226281814623063, 1], [[8, 9, 7, 8], 0.7956021308375234, 1], [[8, 9, 8, 9], 1.2072433986742546, 1], [[8, 9, 9, 10], 1.289732327364915, 1], [[9, 10, 0, 1], 1.0833523498359914, 1], [[9, 10, 1, 2], 1.1081647279850217, 1], [[9, 10, 2, 3], 1.7021420906717395, 1], [[9, 10, 3, 4], 1.6243598265105386, 1], [[9, 10, 4, 5], 1.2188927353836276, 1], [[9, 10, 5, 6], 1.044189703507006, 1], [[9, 10, 6, 7], 0.7055937868568909, 1], [[9, 10, 7, 8], 1.6711126055140721, 1], [[9, 10, 8, 9], 0.6338200968366043, 1], [[9, 10, 9, 10], 0.27756913403181893, 1]]
            environment/obstacles: []
            <!-- [[2, 5, 1], [5, 5, 1], [8, 5, 1], [8, 2, 1], [2, 8, 1]] -->
            environment/low_lims: [0, 0]
            environment/high_lims: [10, 10]
        </rosparam>
    </group>

    <group if="$(arg sim)">
        <include file="$(find stdr_robot)/launch/robot_manager.launch" />
        
        <node type="stdr_server_node" pkg="stdr_server" name="stdr_server" output="screen" args="$(find proj2_pkg)/maps/$(arg map)"/>

        <node pkg="tf" type="static_transform_publisher" name="world2map" args="0 0 0 0 0 0  world map 100" />
        
        <include file="$(find stdr_gui)/launch/stdr_gui.launch"/>

        <node pkg="stdr_robot" type="robot_handler" name="$(anon robot_spawn)" args="add $(find proj2_pkg)/src/robot.yaml $(arg start_position)" />
    </group>

    <!-- Topics. -->
    <arg name="unicycle_command_topic" default="/unicycle/cmd_vel" />
    <arg name="sim_command_topic" default="/robot0/cmd_vel" />
    <arg name="sim_pose_topic" default="/robot0/odom" />
    <arg name="turtlebot_command_topic" default="/mobile_base/commands/velocity" />
    <arg name="state_topic" default="/unicycle/state" />

    <!-- Frames -->
    <arg name="fixed_frame" default="fake_odom" />
    <arg name="robot_frame" default="base_link" />

    <!-- Length of imaginary car. -->
    <arg name="length" default="0.3" />

    <!-- Max Values -->
    <arg name="max_steering_rate" default="3" />
    <arg name="max_steering_angle" default="0.6" />
    <arg name="max_linear_velocity" default="2" />

  <!-- unicycle Converter node. -->
  <node name="unicycle_converter"
      pkg="proj2_pkg"
      type="unicycle_converter.py"
      output="screen">

    <param name="converter/sim" value="$(arg sim)" />
    <param name="converter/sim_command_topic" value="$(arg sim_command_topic)" />
    <param name="converter/turtlebot_command_topic" value="$(arg turtlebot_command_topic)" />
    <param name="converter/fixed_frame" value="$(arg fixed_frame)" />
    <param name="converter/robot_frame" value="$(arg robot_frame)" />
    <param name="converter/sim_pose_topic" value="$(arg sim_pose_topic)" />
    <param name="converter/state_topic" value="$(arg state_topic)" />
    <param name="converter/unicycle_command_topic" value="$(arg unicycle_command_topic)" />
    <param name="converter/length" value="$(arg length)" />
    <param name="converter/max_steering_rate" value="$(arg max_steering_rate)" />
    <param name="converter/max_linear_velocity" value="$(arg max_linear_velocity)" />

  </node>
    
</launch>
