<launch>
    <arg name="sim" default="true"/>
    <arg name="start_position" default="1 1 0" />
    <arg name="map" default="empty.yaml" />

    <group if="$(eval map == 'empty.yaml')">
        <rosparam>
            environment/terrains: []
            environment/obstacles: []
            environment/low_lims: [0, 0]
            environment/high_lims: [5, 5]
        </rosparam>
    </group>

    <group if="$(eval map == 'map1.yaml')">
        <rosparam>
            environment/obstacles: [[6, 3.5, 1.5], [3.5, 6.5, 1]]
            environment/low_lims: [0, 0]
            environment/high_lims: [10, 10]
        </rosparam>
    </group>

    <group if="$(eval map == 'map2.yaml')">
        <rosparam>
            environment/obstacles: [[2, 5, 1], [5, 5, 1], [8, 5, 1], [8, 2, 1], [2, 8, 1]]
            environment/low_lims: [0, 0]
            environment/high_lims: [10, 10]
        </rosparam>
    </group>

    <group if="$(eval map == 'terrains.yaml')">
        <rosparam>
            environment/terrains: [[[4, 8, 4, 8], [0.1, 0], [0.1, 0]]]
            environment/obstacles: []
            <!-- [[2, 5, 1], [5, 5, 1], [8, 5, 1], [8, 2, 1], [2, 8, 1]] -->
            environment/low_lims: [0, 0]
            environment/high_lims: [10, 10]
        </rosparam>
    </group>
    
    <group if="$(eval map == 'terrain_noavoid.yaml')">
        <rosparam>
            environment/terrains: [[[3, 6, 0, 4], [0.1, 0], [0.1, 0]]]
            environment/obstacles: []
            <!-- [[2, 5, 1], [5, 5, 1], [8, 5, 1], [8, 2, 1], [2, 8, 1]] -->
            environment/low_lims: [0, 0]
            environment/high_lims: [10, 4]
        </rosparam>
    </group>

    <group if="$(eval map == 'two_terrains.yaml')">
        <rosparam>
            environment/terrains: [[[2, 8, 0, 3], [0.5, 0.3], [0.5, 0.3]], [[2, 8, 3, 6], [0.5, 0.1], [0.5, 0.1]]]
            environment/obstacles: []
            <!-- [[2, 5, 1], [5, 5, 1], [8, 5, 1], [8, 2, 1], [2, 8, 1]] -->
            environment/low_lims: [0, 0]
            environment/high_lims: [20, 6]
        </rosparam>
    </group>

    <group if="$(eval map == 'terrains_random.yaml')">
        <rosparam>
            environment/terrains: [[[0, 1, 0, 1], [1.258135904346128, 0], [1, 0]], [[0, 1, 1, 2], [0.29628205851903133, 0], [1, 0]], [[0, 1, 2, 3], [0.7594043127807675, 0], [1, 0]], [[0, 1, 3, 4], [0.19410292028786902, 0], [1, 0]], [[0, 1, 4, 5], [0.10049266247444111, 0], [1, 0]], [[0, 1, 5, 6], [0.15757305721509884, 0], [1, 0]], [[0, 1, 6, 7], [1.5072177570781926, 0], [1, 0]], [[0, 1, 7, 8], [1.559469844300907, 0], [1, 0]], [[0, 1, 8, 9], [1.4221314451835005, 0], [1, 0]], [[0, 1, 9, 10], [0.24984536750978847, 0], [1, 0]], [[1, 2, 0, 1], [0.25980211181048896, 0], [1, 0]], [[1, 2, 1, 2], [1.438712484401096, 0], [1, 0]], [[1, 2, 2, 3], [0.7376071863706373, 0], [1, 0]], [[1, 2, 3, 4], [0.1030999494389877, 0], [1, 0]], [[1, 2, 4, 5], [1.4139159280022517, 0], [1, 0]], [[1, 2, 5, 6], [0.7659085268890125, 0], [1, 0]], [[1, 2, 6, 7], [0.9847885193404291, 0], [1, 0]], [[1, 2, 7, 8], [0.7665427783687029, 0], [1, 0]], [[1, 2, 8, 9], [0.4614501572432437, 0], [1, 0]], [[1, 2, 9, 10], [1.3638649814060197, 0], [1, 0]], [[2, 3, 0, 1], [0.9732046352291788, 0], [1, 0]], [[2, 3, 1, 2], [1.5700096213823778, 0], [1, 0]], [[2, 3, 2, 3], [0.5015835874918326, 0], [1, 0]], [[2, 3, 3, 4], [1.6119566730680943, 0], [1, 0]], [[2, 3, 4, 5], [0.532077974073329, 0], [1, 0]], [[2, 3, 5, 6], [1.4369459473181163, 0], [1, 0]], [[2, 3, 6, 7], [0.4343668815246502, 0], [1, 0]], [[2, 3, 7, 8], [1.878537432301125, 0], [1, 0]], [[2, 3, 8, 9], [1.1130933586908032, 0], [1, 0]], [[2, 3, 9, 10], [1.3339865467031138, 0], [1, 0]], [[3, 4, 0, 1], [0.3790086436664075, 0], [1, 0]], [[3, 4, 1, 2], [1.826269863019614, 0], [1, 0]], [[3, 4, 2, 3], [1.5644277430735685, 0], [1, 0]], [[3, 4, 3, 4], [1.3710736868864293, 0], [1, 0]], [[3, 4, 4, 5], [0.7990965269435024, 0], [1, 0]], [[3, 4, 5, 6], [0.08953892837353283, 0], [1, 0]], [[3, 4, 6, 7], [1.5723405954340566, 0], [1, 0]], [[3, 4, 7, 8], [0.02883356648327129, 0], [1, 0]], [[3, 4, 8, 9], [1.2291855512726333, 0], [1, 0]], [[3, 4, 9, 10], [0.5426990727297489, 0], [1, 0]], [[4, 5, 0, 1], [0.9921091412146681, 0], [1, 0]], [[4, 5, 1, 2], [1.2308908901314382, 0], [1, 0]], [[4, 5, 2, 3], [0.9142318424139548, 0], [1, 0]], [[4, 5, 3, 4], [0.49803472606412647, 0], [1, 0]], [[4, 5, 4, 5], [1.0397467970470373, 0], [1, 0]], [[4, 5, 5, 6], [1.7478252580707199, 0], [1, 0]], [[4, 5, 6, 7], [0.17878876563392443, 0], [1, 0]], [[4, 5, 7, 8], [1.8658507978664303, 0], [1, 0]], [[4, 5, 8, 9], [1.9307972817850676, 0], [1, 0]], [[4, 5, 9, 10], [1.7749288972167372, 0], [1, 0]], [[5, 6, 0, 1], [1.9891252383139177, 0], [1, 0]], [[5, 6, 1, 2], [0.6772874710788168, 0], [1, 0]], [[5, 6, 2, 3], [0.47368288485857457, 0], [1, 0]], [[5, 6, 3, 4], [1.955299908986282, 0], [1, 0]], [[5, 6, 4, 5], [1.558383983648913, 0], [1, 0]], [[5, 6, 5, 6], [0.6861391879363645, 0], [1, 0]], [[5, 6, 6, 7], [0.05294063339189803, 0], [1, 0]], [[5, 6, 7, 8], [1.4552308509156395, 0], [1, 0]], [[5, 6, 8, 9], [1.3718326719131617, 0], [1, 0]], [[5, 6, 9, 10], [1.4419287391194155, 0], [1, 0]], [[6, 7, 0, 1], [0.3039887395478438, 0], [1, 0]], [[6, 7, 1, 2], [0.48158939240086296, 0], [1, 0]], [[6, 7, 2, 3], [1.363057499700398, 0], [1, 0]], [[6, 7, 3, 4], [0.52979415940491, 0], [1, 0]], [[6, 7, 4, 5], [1.472533596446167, 0], [1, 0]], [[6, 7, 5, 6], [0.5803166171303507, 0], [1, 0]], [[6, 7, 6, 7], [0.9670813284430739, 0], [1, 0]], [[6, 7, 7, 8], [0.5066800367984945, 0], [1, 0]], [[6, 7, 8, 9], [1.885286347714693, 0], [1, 0]], [[6, 7, 9, 10], [1.0197140829418379, 0], [1, 0]], [[7, 8, 0, 1], [1.4674557695870172, 0], [1, 0]], [[7, 8, 1, 2], [0.7063350623801163, 0], [1, 0]], [[7, 8, 2, 3], [1.8588797791348537, 0], [1, 0]], [[7, 8, 3, 4], [1.9525467318393421, 0], [1, 0]], [[7, 8, 4, 5], [0.9088945985105468, 0], [1, 0]], [[7, 8, 5, 6], [0.9401357823774827, 0], [1, 0]], [[7, 8, 6, 7], [0.9378022993185271, 0], [1, 0]], [[7, 8, 7, 8], [0.39955305410929065, 0], [1, 0]], [[7, 8, 8, 9], [0.4010232152162567, 0], [1, 0]], [[7, 8, 9, 10], [0.3443665499714259, 0], [1, 0]], [[8, 9, 0, 1], [0.3341867386160533, 0], [1, 0]], [[8, 9, 1, 2], [0.5513711720205314, 0], [1, 0]], [[8, 9, 2, 3], [0.7119722366904047, 0], [1, 0]], [[8, 9, 3, 4], [1.357561518111953, 0], [1, 0]], [[8, 9, 4, 5], [0.5037310296925639, 0], [1, 0]], [[8, 9, 5, 6], [1.5168433438375584, 0], [1, 0]], [[8, 9, 6, 7], [0.8582495233708172, 0], [1, 0]], [[8, 9, 7, 8], [1.1522028465496403, 0], [1, 0]], [[8, 9, 8, 9], [0.13400499541324562, 0], [1, 0]], [[8, 9, 9, 10], [1.362750460038367, 0], [1, 0]], [[9, 10, 0, 1], [1.5283078930963208, 0], [1, 0]], [[9, 10, 1, 2], [1.8442521342226592, 0], [1, 0]], [[9, 10, 2, 3], [0.1527543901883348, 0], [1, 0]], [[9, 10, 3, 4], [0.49509052369380147, 0], [1, 0]], [[9, 10, 4, 5], [1.3865244291619667, 0], [1, 0]], [[9, 10, 5, 6], [0.8863274342897074, 0], [1, 0]], [[9, 10, 6, 7], [0.005792012363010635, 0], [1, 0]], [[9, 10, 7, 8], [1.2658560839621855, 0], [1, 0]], [[9, 10, 8, 9], [1.5191082976704469, 0], [1, 0]], [[9, 10, 9, 10], [0.49350625545655635, 0], [1, 0]]]
            environment/obstacles: []
            <!-- [[2, 5, 1], [5, 5, 1], [8, 5, 1], [8, 2, 1], [2, 8, 1]] -->
            environment/low_lims: [0, 0]
            environment/high_lims: [10, 10]
        </rosparam>
    </group>

    <group if="$(arg sim)">
        <include file="$(find stdr_robot)/launch/robot_manager.launch" />
        
        <node type="stdr_server_node" pkg="stdr_server" name="stdr_server" output="screen" args="$(find proj2_pkg)/maps/$(arg map)"/>

        <node pkg="tf" type="static_transform_publisher" name="world2map" args="0 0 0 0 0 0  world map 100" />
        
        <include file="$(find stdr_gui)/launch/stdr_gui.launch"/>

        <node pkg="stdr_robot" type="robot_handler" name="$(anon robot_spawn)" args="add $(find proj2_pkg)/src/robot.yaml $(arg start_position)" />
    </group>

    <!-- Topics. -->
    <arg name="unicycle_command_topic" default="/unicycle/cmd_vel" />
    <arg name="sim_command_topic" default="/robot0/cmd_vel" />
    <arg name="sim_pose_topic" default="/robot0/odom" />
    <arg name="turtlebot_command_topic" default="/mobile_base/commands/velocity" />
    <arg name="state_topic" default="/unicycle/state" />

    <!-- Frames -->
    <arg name="fixed_frame" default="fake_odom" />
    <arg name="robot_frame" default="base_link" />

    <!-- Length of imaginary car. -->
    <arg name="length" default="0.3" />

    <!-- Max Values -->
    <arg name="max_steering_rate" default="3" />
    <arg name="max_steering_angle" default="0.6" />
    <arg name="max_linear_velocity" default="2" />

  <!-- unicycle Converter node. -->
  <node name="unicycle_converter"
      pkg="proj2_pkg"
      type="unicycle_converter.py"
      output="screen">

    <param name="converter/sim" value="$(arg sim)" />
    <param name="converter/sim_command_topic" value="$(arg sim_command_topic)" />
    <param name="converter/turtlebot_command_topic" value="$(arg turtlebot_command_topic)" />
    <param name="converter/fixed_frame" value="$(arg fixed_frame)" />
    <param name="converter/robot_frame" value="$(arg robot_frame)" />
    <param name="converter/sim_pose_topic" value="$(arg sim_pose_topic)" />
    <param name="converter/state_topic" value="$(arg state_topic)" />
    <param name="converter/unicycle_command_topic" value="$(arg unicycle_command_topic)" />
    <param name="converter/length" value="$(arg length)" />
    <param name="converter/max_steering_rate" value="$(arg max_steering_rate)" />
    <param name="converter/max_linear_velocity" value="$(arg max_linear_velocity)" />

  </node>
    
</launch>
