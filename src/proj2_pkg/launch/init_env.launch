<launch>
    <arg name="sim" default="true"/>
    <arg name="start_position" default="1 1 0" />
    <arg name="map" default="empty.yaml" />

    <group if="$(eval map == 'empty.yaml')">
        <rosparam>
            environment/terrains: []
            environment/obstacles: []
            environment/low_lims: [0, 0]
            environment/high_lims: [5, 5]
        </rosparam>
    </group>

    <group if="$(eval map == 'map1.yaml')">
        <rosparam>
            environment/obstacles: [[6, 3.5, 1.5], [3.5, 6.5, 1]]
            environment/low_lims: [0, 0]
            environment/high_lims: [10, 10]
        </rosparam>
    </group>

    <group if="$(eval map == 'map2.yaml')">
        <rosparam>
            environment/obstacles: [[2, 5, 1], [5, 5, 1], [8, 5, 1], [8, 2, 1], [2, 8, 1]]
            environment/low_lims: [0, 0]
            environment/high_lims: [10, 10]
        </rosparam>
    </group>

    <group if="$(eval map == 'terrains.yaml')">
        <rosparam>
            environment/terrains: [[[4, 8, 4, 8], [0.1, 0], [0.1, 0]]]
            environment/obstacles: []
            <!-- [[2, 5, 1], [5, 5, 1], [8, 5, 1], [8, 2, 1], [2, 8, 1]] -->
            environment/low_lims: [0, 0]
            environment/high_lims: [10, 10]
        </rosparam>
    </group>
    
    <group if="$(eval map == 'terrain_noavoid.yaml')">
        <rosparam>
            environment/terrains: [[[3, 6, 0, 4], [0.1, 0], [0.1, 0]]]
            environment/obstacles: []
            <!-- [[2, 5, 1], [5, 5, 1], [8, 5, 1], [8, 2, 1], [2, 8, 1]] -->
            environment/low_lims: [0, 0]
            environment/high_lims: [10, 4]
        </rosparam>
    </group>

    <group if="$(eval map == 'two_terrains.yaml')">
        <rosparam>
            environment/terrains: [[[2, 8, 0, 3], [0.5, 0.3], [0.5, 0.3]], [[2, 8, 3, 6], [0.5, 0.1], [0.5, 0.1]]]
            environment/obstacles: []
            <!-- [[2, 5, 1], [5, 5, 1], [8, 5, 1], [8, 2, 1], [2, 8, 1]] -->
            environment/low_lims: [0, 0]
            environment/high_lims: [20, 6]
        </rosparam>
    </group>

    <group if="$(eval map == 'terrains_random.yaml')">
        <rosparam>
            environment/terrains: [[[0, 1, 0, 1], [0.9437732064901287, 0], [1, 0]], [[0, 1, 1, 2], [0.556058451683478, 0], [1, 0]], [[0, 1, 2, 3], [0.7461762968524772, 0], [1, 0]], [[0, 1, 3, 4], [0.7824799492240002, 0], [1, 0]], [[0, 1, 4, 5], [0.7568697918639764, 0], [1, 0]], [[0, 1, 5, 6], [0.48838757470748456, 0], [1, 0]], [[0, 1, 6, 7], [0.5053290565251138, 0], [1, 0]], [[0, 1, 7, 8], [0.9373100689391294, 0], [1, 0]], [[0, 1, 8, 9], [0.8469707932963335, 0], [1, 0]], [[0, 1, 9, 10], [0.6392832810010425, 0], [1, 0]], [[1, 2, 0, 1], [0.8479261015572916, 0], [1, 0]], [[1, 2, 1, 2], [0.9281383580241014, 0], [1, 0]], [[1, 2, 2, 3], [0.8369456292527087, 0], [1, 0]], [[1, 2, 3, 4], [0.868102253066382, 0], [1, 0]], [[1, 2, 4, 5], [0.5240298043992777, 0], [1, 0]], [[1, 2, 5, 6], [0.3874709256668728, 0], [1, 0]], [[1, 2, 6, 7], [0.5975703592643937, 0], [1, 0]], [[1, 2, 7, 8], [0.5410363720919192, 0], [1, 0]], [[1, 2, 8, 9], [0.3025387341324076, 0], [1, 0]], [[1, 2, 9, 10], [0.23864737718546344, 0], [1, 0]], [[2, 3, 0, 1], [0.23662834603799449, 0], [1, 0]], [[2, 3, 1, 2], [0.9361008389625733, 0], [1, 0]], [[2, 3, 2, 3], [0.5566170051252424, 0], [1, 0]], [[2, 3, 3, 4], [0.6813096647700304, 0], [1, 0]], [[2, 3, 4, 5], [0.3674671152603272, 0], [1, 0]], [[2, 3, 5, 6], [0.8272436628002291, 0], [1, 0]], [[2, 3, 6, 7], [0.6627852941959607, 0], [1, 0]], [[2, 3, 7, 8], [0.2514191506227486, 0], [1, 0]], [[2, 3, 8, 9], [0.6402505293758016, 0], [1, 0]], [[2, 3, 9, 10], [0.25299069357169046, 0], [1, 0]], [[3, 4, 0, 1], [0.6291471030405995, 0], [1, 0]], [[3, 4, 1, 2], [0.601082380049857, 0], [1, 0]], [[3, 4, 2, 3], [0.5491872345838424, 0], [1, 0]], [[3, 4, 3, 4], [0.6869140332550241, 0], [1, 0]], [[3, 4, 4, 5], [0.6365692108772374, 0], [1, 0]], [[3, 4, 5, 6], [0.6363737883237095, 0], [1, 0]], [[3, 4, 6, 7], [0.2550096498895149, 0], [1, 0]], [[3, 4, 7, 8], [0.8270721853945537, 0], [1, 0]], [[3, 4, 8, 9], [0.644964038584735, 0], [1, 0]], [[3, 4, 9, 10], [0.5942752378384781, 0], [1, 0]], [[4, 5, 0, 1], [0.7170942713212085, 0], [1, 0]], [[4, 5, 1, 2], [0.4135266110585706, 0], [1, 0]], [[4, 5, 2, 3], [0.7391590178560659, 0], [1, 0]], [[4, 5, 3, 4], [0.9165523541110263, 0], [1, 0]], [[4, 5, 4, 5], [0.2670123527826481, 0], [1, 0]], [[4, 5, 5, 6], [0.4714582564121807, 0], [1, 0]], [[4, 5, 6, 7], [0.2459489423024613, 0], [1, 0]], [[4, 5, 7, 8], [0.5953088302984082, 0], [1, 0]], [[4, 5, 8, 9], [0.4907040118530697, 0], [1, 0]], [[4, 5, 9, 10], [0.8196156392199085, 0], [1, 0]], [[5, 6, 0, 1], [0.2784612483389318, 0], [1, 0]], [[5, 6, 1, 2], [0.6609515374551294, 0], [1, 0]], [[5, 6, 2, 3], [0.6769168430934329, 0], [1, 0]], [[5, 6, 3, 4], [0.7072426401179044, 0], [1, 0]], [[5, 6, 4, 5], [0.8851400731882342, 0], [1, 0]], [[5, 6, 5, 6], [0.5443310057693003, 0], [1, 0]], [[5, 6, 6, 7], [0.8525395316847457, 0], [1, 0]], [[5, 6, 7, 8], [0.3856725320712795, 0], [1, 0]], [[5, 6, 8, 9], [0.7244882114290443, 0], [1, 0]], [[5, 6, 9, 10], [0.9494105645300837, 0], [1, 0]], [[6, 7, 0, 1], [0.5790722342677075, 0], [1, 0]], [[6, 7, 1, 2], [0.7254932710662156, 0], [1, 0]], [[6, 7, 2, 3], [0.4497627219648304, 0], [1, 0]], [[6, 7, 3, 4], [0.872181846989343, 0], [1, 0]], [[6, 7, 4, 5], [0.33962286749536996, 0], [1, 0]], [[6, 7, 5, 6], [0.31913504836437945, 0], [1, 0]], [[6, 7, 6, 7], [0.5676422176663825, 0], [1, 0]], [[6, 7, 7, 8], [0.25188359090250834, 0], [1, 0]], [[6, 7, 8, 9], [0.8029850496243756, 0], [1, 0]], [[6, 7, 9, 10], [0.49100782099986645, 0], [1, 0]], [[7, 8, 0, 1], [0.8760862917715158, 0], [1, 0]], [[7, 8, 1, 2], [0.537860763025181, 0], [1, 0]], [[7, 8, 2, 3], [0.4807816708413684, 0], [1, 0]], [[7, 8, 3, 4], [0.4586841980409078, 0], [1, 0]], [[7, 8, 4, 5], [0.35775014741673017, 0], [1, 0]], [[7, 8, 5, 6], [0.4930679774157856, 0], [1, 0]], [[7, 8, 6, 7], [0.3996399249542022, 0], [1, 0]], [[7, 8, 7, 8], [0.47085671928156314, 0], [1, 0]], [[7, 8, 8, 9], [0.2982232030600315, 0], [1, 0]], [[7, 8, 9, 10], [0.7431522882615196, 0], [1, 0]], [[8, 9, 0, 1], [0.6972128851621957, 0], [1, 0]], [[8, 9, 1, 2], [0.6647803170821543, 0], [1, 0]], [[8, 9, 2, 3], [0.6124766594744904, 0], [1, 0]], [[8, 9, 3, 4], [0.8608583840728015, 0], [1, 0]], [[8, 9, 4, 5], [0.3011016363522472, 0], [1, 0]], [[8, 9, 5, 6], [0.6296256628462757, 0], [1, 0]], [[8, 9, 6, 7], [0.4556377198004918, 0], [1, 0]], [[8, 9, 7, 8], [0.8095148791165441, 0], [1, 0]], [[8, 9, 8, 9], [0.31991382492776843, 0], [1, 0]], [[8, 9, 9, 10], [0.9130923978578371, 0], [1, 0]], [[9, 10, 0, 1], [0.8651961569426556, 0], [1, 0]], [[9, 10, 1, 2], [0.4090017947408636, 0], [1, 0]], [[9, 10, 2, 3], [0.8030015027651702, 0], [1, 0]], [[9, 10, 3, 4], [0.28108991012618195, 0], [1, 0]], [[9, 10, 4, 5], [0.2204045349783576, 0], [1, 0]], [[9, 10, 5, 6], [0.7993314032252639, 0], [1, 0]], [[9, 10, 6, 7], [0.8669898674485235, 0], [1, 0]], [[9, 10, 7, 8], [0.3631446059948118, 0], [1, 0]], [[9, 10, 8, 9], [0.7371670850374794, 0], [1, 0]], [[9, 10, 9, 10], [0.44709612009865074, 0], [1, 0]]]
            environment/obstacles: []
            <!-- [[2, 5, 1], [5, 5, 1], [8, 5, 1], [8, 2, 1], [2, 8, 1]] -->
            environment/low_lims: [0, 0]
            environment/high_lims: [10, 10]
        </rosparam>
    </group>

    <group if="$(arg sim)">
        <include file="$(find stdr_robot)/launch/robot_manager.launch" />
        
        <node type="stdr_server_node" pkg="stdr_server" name="stdr_server" output="screen" args="$(find proj2_pkg)/maps/$(arg map)"/>

        <node pkg="tf" type="static_transform_publisher" name="world2map" args="0 0 0 0 0 0  world map 100" />
        
        <include file="$(find stdr_gui)/launch/stdr_gui.launch"/>

        <node pkg="stdr_robot" type="robot_handler" name="$(anon robot_spawn)" args="add $(find proj2_pkg)/src/robot.yaml $(arg start_position)" />
    </group>

    <!-- Topics. -->
    <arg name="unicycle_command_topic" default="/unicycle/cmd_vel" />
    <arg name="sim_command_topic" default="/robot0/cmd_vel" />
    <arg name="sim_pose_topic" default="/robot0/odom" />
    <arg name="turtlebot_command_topic" default="/mobile_base/commands/velocity" />
    <arg name="state_topic" default="/unicycle/state" />

    <!-- Frames -->
    <arg name="fixed_frame" default="fake_odom" />
    <arg name="robot_frame" default="base_link" />

    <!-- Length of imaginary car. -->
    <arg name="length" default="0.3" />

    <!-- Max Values -->
    <arg name="max_steering_rate" default="3" />
    <arg name="max_steering_angle" default="0.6" />
    <arg name="max_linear_velocity" default="2" />

  <!-- unicycle Converter node. -->
  <node name="unicycle_converter"
      pkg="proj2_pkg"
      type="unicycle_converter.py"
      output="screen">

    <param name="converter/sim" value="$(arg sim)" />
    <param name="converter/sim_command_topic" value="$(arg sim_command_topic)" />
    <param name="converter/turtlebot_command_topic" value="$(arg turtlebot_command_topic)" />
    <param name="converter/fixed_frame" value="$(arg fixed_frame)" />
    <param name="converter/robot_frame" value="$(arg robot_frame)" />
    <param name="converter/sim_pose_topic" value="$(arg sim_pose_topic)" />
    <param name="converter/state_topic" value="$(arg state_topic)" />
    <param name="converter/unicycle_command_topic" value="$(arg unicycle_command_topic)" />
    <param name="converter/length" value="$(arg length)" />
    <param name="converter/max_steering_rate" value="$(arg max_steering_rate)" />
    <param name="converter/max_linear_velocity" value="$(arg max_linear_velocity)" />

  </node>
    
</launch>
